{"version":3,"file":"index.mjs","sources":["../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Complex64 from '@stdlib/complex-float32-ctor';\nimport roundf from '@stdlib/math-base-special-roundf';\nimport real from '@stdlib/complex-float32-real';\nimport imag from '@stdlib/complex-float32-imag';\n\n\n// MAIN //\n\n/**\n* Rounds each component of a single-precision complex floating-point number to the nearest integer.\n*\n* @param {Complex64} z - complex number\n* @returns {Complex64} rounded complex number\n*\n* @example\n* import Complex64 from '@stdlib/complex-float32-ctor';\n* import real from '@stdlib/complex-float32-real';\n* import imag from '@stdlib/complex-float32-imag';\n*\n* var v = croundf( new Complex64( -4.2, 5.5 ) );\n* // returns <Complex64>\n*\n* var re = real( v );\n* // returns -4.0\n*\n* var im = imag( v );\n* // returns 6.0\n*\n* v = croundf( new Complex64( 9.99999, 0.1 ) );\n* // returns <Complex64>\n*\n* re = real( v );\n* // returns 10.0\n*\n* im = imag( v );\n* // returns 0.0\n*\n* v = croundf( new Complex64( 0.0, 0.0 ) );\n* // returns <Complex64>\n*\n* re = real( v );\n* // returns 0.0\n*\n* im = imag( v );\n* // returns 0.0\n*\n* v = croundf( new Complex64( NaN, NaN ) );\n* // returns <Complex64>\n*\n* re = real( v );\n* // returns NaN\n*\n* im = imag( v );\n* // returns NaN\n*/\nfunction croundf( z ) {\n\treturn new Complex64( roundf( real( z ) ), roundf( imag( z ) ) );\n}\n\n\n// EXPORTS //\n\nexport default croundf;\n"],"names":["croundf","z","Complex64","roundf","real","imag"],"mappings":";;yXA6EA,SAASA,EAASC,GACjB,OAAO,IAAIC,EAAWC,EAAQC,EAAMH,IAAOE,EAAQE,EAAMJ,IAC1D"}