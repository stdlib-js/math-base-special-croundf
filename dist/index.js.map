{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar Complex64 = require( '@stdlib/complex-float32-ctor' );\nvar roundf = require( '@stdlib/math-base-special-roundf' );\nvar real = require( '@stdlib/complex-float32-real' );\nvar imag = require( '@stdlib/complex-float32-imag' );\n\n\n// MAIN //\n\n/**\n* Rounds each component of a single-precision complex floating-point number to the nearest integer.\n*\n* @param {Complex64} z - complex number\n* @returns {Complex64} rounded complex number\n*\n* @example\n* var Complex64 = require( '@stdlib/complex-float32-ctor' );\n* var real = require( '@stdlib/complex-float32-real' );\n* var imag = require( '@stdlib/complex-float32-imag' );\n*\n* var v = croundf( new Complex64( -4.2, 5.5 ) );\n* // returns <Complex64>\n*\n* var re = real( v );\n* // returns -4.0\n*\n* var im = imag( v );\n* // returns 6.0\n*\n* v = croundf( new Complex64( 9.99999, 0.1 ) );\n* // returns <Complex64>\n*\n* re = real( v );\n* // returns 10.0\n*\n* im = imag( v );\n* // returns 0.0\n*\n* v = croundf( new Complex64( 0.0, 0.0 ) );\n* // returns <Complex64>\n*\n* re = real( v );\n* // returns 0.0\n*\n* im = imag( v );\n* // returns 0.0\n*\n* v = croundf( new Complex64( NaN, NaN ) );\n* // returns <Complex64>\n*\n* re = real( v );\n* // returns NaN\n*\n* im = imag( v );\n* // returns NaN\n*/\nfunction croundf( z ) {\n\treturn new Complex64( roundf( real( z ) ), roundf( imag( z ) ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = croundf;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Round each component of a single-precision complex floating-point number to the nearest integer.\n*\n* @module @stdlib/math-base-special-croundf\n*\n* @example\n* var Complex64 = require( '@stdlib/complex-float32-ctor' );\n* var real = require( '@stdlib/complex-float32-real' );\n* var imag = require( '@stdlib/complex-float32-imag' );\n* var croundf = require( '@stdlib/math-base-special-croundf' );\n*\n* var v = croundf( new Complex64( -4.2, 5.5 ) );\n* // returns <Complex64>\n*\n* var re = real( v );\n* // returns -4.0\n*\n* var im = imag( v );\n* // returns 6.0\n*\n* v = croundf( new Complex64( 9.99999, 0.1 ) );\n* // returns <Complex64>\n*\n* re = real( v );\n* // returns 10.0\n*\n* im = imag( v );\n* // returns 0.0\n*\n* v = croundf( new Complex64( 0.0, 0.0 ) );\n* // returns <Complex64>\n*\n* re = real( v );\n* // returns 0.0\n*\n* im = imag( v );\n* // returns 0.0\n*\n* v = croundf( new Complex64( NaN, NaN ) );\n* // returns <Complex64>\n*\n* re = real( v );\n* // returns NaN\n*\n* im = imag( v );\n* // returns NaN\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAY,QAAS,8BAA+B,EACpDC,EAAS,QAAS,kCAAmC,EACrDC,EAAO,QAAS,8BAA+B,EAC/CC,EAAO,QAAS,8BAA+B,EAoDnD,SAASC,EAASC,EAAI,CACrB,OAAO,IAAIL,EAAWC,EAAQC,EAAMG,CAAE,CAAE,EAAGJ,EAAQE,EAAME,CAAE,CAAE,CAAE,CAChE,CAKAN,EAAO,QAAUK,ICdjB,IAAIE,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "Complex64", "roundf", "real", "imag", "croundf", "z", "main"]
}
